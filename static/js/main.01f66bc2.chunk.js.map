{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","defaultMovie","FindMovie","onAddMovie","useState","inputValue","setInputValue","isResponseError","setIsResponseError","setMovie","isInitialized","setIsInitialized","isLoading","setIsLoading","onFindClick","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","response","movieImdbUrl","imdbID","movieFromServer","Title","Plot","Poster","htmlFor","type","id","placeholder","value","onChange","target","classNames","onClick","disabled","App","setMovies","find","item","addedMovies","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01f66bc2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nconst defaultMovie: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [isResponseError, setIsResponseError] = useState(false);\n  const [movie, setMovie] = useState<Movie>(defaultMovie);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    setIsResponseError(false);\n  };\n\n  const onFindClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      const response: MovieData | ResponseError = await getMovie(inputValue);\n\n      if ('Error' in response) {\n        setIsResponseError(true);\n        setIsLoading(false);\n\n        return;\n      }\n\n      const movieImdbUrl = `https://www.imdb.com/title/${response.imdbID}`;\n\n      const movieFromServer = {\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster !== 'N/A'\n          ? response.Poster\n          : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n        imdbUrl: movieImdbUrl,\n        imdbId: response.imdbID,\n      };\n\n      setMovie(movieFromServer);\n      setIsInitialized(true);\n    } catch (error) {\n      setIsLoading(false);\n      setMovie(defaultMovie);\n      setIsInitialized(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onAddClick = () => {\n    setInputValue('');\n    setIsInitialized(false);\n    onAddMovie(movie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={inputValue}\n              onChange={onInputChange}\n            />\n          </div>\n\n          {isResponseError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              onClick={onFindClick}\n              disabled={!inputValue}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {isInitialized && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {isInitialized && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8a33cae3';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAddMovie = (movie: Movie) => {\n    if (movies.find(item => item.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    const addedMovies = [...movies];\n\n    addedMovies.push(movie);\n    setMovies(addedMovies);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}